name: Linting

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  IMAGE_TAG_EC: '2.7.0'
  IMAGE_TAG_SHELLCHECK: 'v0.9.0'

jobs:
  EditorConfig:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run the Linter
        run: |
          docker run --rm --tty --volume "${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}:ro" --workdir "${GITHUB_WORKSPACE}" \
            "docker.io/mstruebing/editorconfig-checker:${IMAGE_TAG_EC}"

  ShellCheck:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run the Linter
        run: |
          set -e -u -o pipefail

          readarray -d '' FILES < <(find "${GITHUB_WORKSPACE}/modules/" \
            -type f -regextype egrep -iregex '.*\.sh' -print0)
          FILES+=("${GITHUB_WORKSPACE}/load")

          docker run --rm --tty --volume "${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}:ro" --workdir "${GITHUB_WORKSPACE}" \
            "docker.io/koalaman/shellcheck-alpine:${IMAGE_TAG_SHELLCHECK}" \
            shellcheck --source-path=${GITHUB_WORKSPACE} "${FILES[@]}"

          unset FILES
          readarray -d '' FILES < <(find "${GITHUB_WORKSPACE}/tests/" \
            -maxdepth 1 -type f -regextype egrep -iregex '.*\.bats' -print0)

          docker run --rm --tty --volume "${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}:ro" --workdir "${GITHUB_WORKSPACE}" \
            "docker.io/koalaman/shellcheck-alpine:${IMAGE_TAG_SHELLCHECK}" \
            shellcheck --source-path=${GITHUB_WORKSPACE} --exclude=SC2034 "${FILES[@]}"
